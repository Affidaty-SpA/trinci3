[package]
name = "trinci-node"
version.workspace = true
edition.workspace = true

[[bin]]
name = "node_standalone"
path = "src/main.rs"

[dependencies]
async-recursion = "1"
async-std = { workspace = true }
asynchronous-codec = "0.7"
bitflags = { version = "2", features = ["serde"] }
bs58 = { workspace = true }
clap = { workspace = true }
crossbeam-channel = { workspace = true }
env_logger = { workspace = true }
merkledb = { git = "https://github.com/Affidaty-SpA/merkledb.git", default-features = false, features = [
    "rocksdb_snappy",
    "sodiumoxide-crypto",
] }
futures = { workspace = true }
hex = { workspace = true }
isahc = { version = "1.7", features = ["json", "serde_json"] }
kafka = { version = "0.10.0", optional = true }
libp2p = { version = "0.53", features = [
    "autonat",
    "tcp",
    "dns",
    "async-std",
    "noise",
    "yamux",
    "websocket",
    "ping",
    "macros",
    "gossipsub",
    "kad",
    "identify",
    "ecdsa",
    "request-response",
], optional = true }
log = { workspace = true }
quick-protobuf-codec = "0.2.0"
rand = "0.8"
ring = { workspace = true }
rmp-serde = { workspace = true }
serde = { workspace = true }
serde_bytes = { workspace = true }
serde_json = { workspace = true }
serde-value = { git = "https://github.com/affidaty-blockchain/serde-value", branch = "helper_macro" }
systemstat = "0.2.3"
sysinfo = "0.30"
tide = { workspace = true, optional = true }
trinci-core-new = { path = "../trinci-core-new" }
urlencoding = "2.0.0"
wasmtime = { workspace = true }
uuid = { version = "1.8", features = [
    "v4",       # Lets you generate random UUIDs
    "fast-rng", # Use a faster (but still sufficiently random) RNG
], optional = true }
[dev-dependencies]
lazy_static = "1"
mockall = "0.12"
tempfile = "3"

[features]
default = ["standalone"]
indexer = ["uuid"]
kafka-producer = ["kafka"]
standalone = ["libp2p", "tide"]
mining = []
playground = []
